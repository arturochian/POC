{
    "contents" : "cars <- read.csv('data/cars.csv')\np1 <- rCharts$new()\np2 <- rCharts$new()\n\n# specify location of parcoords library folder.\np2$setLib('libraries/widgets/parcoords')\np2$set(padding = list(top = 24, left = 0, bottom = 12, right = 200))\np2$set(\n  data = toJSONArray(cars, json = F), \n  colorby = 'economy', \n  range = range(cars$economy),\n  colors = c('steelblue', 'brown')\n)\n\n\n\nshinyServer(function(input, output,session) { \n  \n  dsInput <- reactive({\n    \n    if(!is.null(dat)){\n      datSK <- subset(dat,ProductSubFamily ==input$psf,select=c(1:3))\n    }\n    \n  })\n  \n  fetchOPN <- reactive({\n    opnList<- dsInput()[,c(1:1)]\n  })\n  \n  fetchsubset <- reactive({\n    ds <- dsInput()\n    if(is.element('All', input$opn))\n    {\n      dssubset <- ds\n    }\n    else{\n      dssubset <- ds[which(ds$To %in% input$opn),]\n    }    \n    return(dssubset)\n  })\n  \n  observe({  \n    updateCheckboxGroupInput(session, \"opn\",choices = c('All',fetchOPN()))     \n  })\n  \n  output$opngdview <- renderGvis({\n    input$goButton\n    isolate({\n    gvisSankey(fetchsubset(), from=\"From\", to=\"To\", weight=\"QTY\",\n                         options=list(\n                           height=800,\n                           sankey=\"{link: {color: { fill: '#d799ae' } },\n                           node: { color: { fill: '#a61d4c' },\n                           label: { color: '#871b47' } }}\"))\n    }) \n  })\n\n\n  output$opngdview3 <- renderGvis({\n    gvisMotionChart(data2, idvar='OPN', timevar='Date')\n    \n  })\n  \n  output$myChart <- renderChart({\n    names(iris) = gsub(\"\\\\.\", \"\", names(iris))\n    p1 <- rPlot(input$x, input$y, data = iris, color = \"Species\", \n                facet = \"Species\", type = 'point')\n    p1$addParams(dom = 'myChart')\n    return(p1)\n  })\n  \n  \n  output$p2 <- renderChart2({\n    p2 <- rCharts$new()\n    p2$setLib('libraries/widgets/parcoords')\n    p2$set(padding = list(top = 24, left = 0, bottom = 12, right = 50))\n    p2$set(\n      data = toJSONArray(cars, json = F), \n      colorby = input$colorby, \n      range = range(cars[[input$colorby]]),\n      colors = c('steelblue', 'brown'),\n      width = 300\n    )\n    p2\n  })\n  \n  \n  \n  selectedData <- renderText({ \n    paste(\"Selected:\", input$selected)\n  })\n  \n  #===\n  \n  updateData <- reactive({\n      inFile <- input$file1    \n      if (is.null(inFile)) {return(NULL)}    \n      uploadeddata <- read.csv(inFile$datapath, header = input$header,sep = input$sep) \n  })\n  \n  fetchCol <- reactive({\n      colList <- colnames(updateData())\n  })\n  \n  observe({\n      var_A <- fetchCol()\n      updateCheckboxGroupInput(session, 'SelectCol',choices = var_A,select = var_A)\n      \n  })\n  \n  output$contents <- renderTable({\n    dat <- updateData()\n    if(input$goButton2)\n    {\n      src <<- dat[,input$SelectCol]\n    }\n    head(src,10)\n  })\n  \n  output$joined <- renderTable({\n    if(input$goButton3)\n    {\n      newdata <<- merge(x = src, y = DIM, by.x = 'DEMAND_ITEM', by.y = 'OARSPartName', all.x=TRUE)\n      head(newdata,5)\n    }\n  })\n  \n  output$downloadData <- downloadHandler(\n    filename = function() {\n      paste('transformed.csv', sep='\\t')\n    },\n    content = function(file) {\n      write.csv(newdata, file, row.names=FALSE)\n    }\n  )\n  #===\n})\n",
    "created" : 1406669689782.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "645931587",
    "id" : "BFDF24B4",
    "lastKnownWriteTime" : 1406669855,
    "path" : "C:/R/POC/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}